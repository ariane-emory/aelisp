#pragma once

#include "obj.h"

#define free_list_size (1 << 18)

////////////////////////////////////////////////////////////////////////////////////////////////////
// types
////////////////////////////////////////////////////////////////////////////////////////////////////
typedef enum { NO_STD, SPLIT_STD, MONO_STD } std_mode_t;
////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////
// data
////////////////////////////////////////////////////////////////////////////////////////////////////
extern char       mem[free_list_size];
extern ae_obj_t * program;
extern FILE *     yyin;
extern bool       log_core;
extern bool       log_eval;
extern bool       log_macro;
extern bool       log_loading_std;
extern bool       enable_microbench;
extern std_mode_t std_mode;
extern bool       read_error;
extern ae_obj_t * filename_stack;
extern ae_obj_t * line_stack;
////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////
// functions
////////////////////////////////////////////////////////////////////////////////////////////////////
void       preface(void); 
ae_obj_t * setup_root_env(void);
void       paint_parsed(void);
bool       setopts(int argc, char * argv[]);
ae_obj_t * load_file(const char * filename, bool * const failed_to_open);
////////////////////////////////////////////////////////////////////////////////////////////////////
